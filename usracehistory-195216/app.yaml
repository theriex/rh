application: usracehistory-195216
version: 1
runtime: python27
api_version: 1
threadsafe: yes

libraries:
- name: pycrypto
  version: "2.3"

handlers:
######################################################################
##  API: bracketed params are optional.
##

## -------------------- appuser --------------------

## Retrieve the account and an access token.
## GET params: email, password
- url: .*/acctok.*
  script: src.py.appuser.app


## Create account or update if authtok provided.
## POST params: email, [authtok], password, [actcode, name, url, shoutout,
##              lang, settings, remtls, completed, started, built]
- url: .*/updacc.*
  script: src.py.appuser.app


## Email forgotten native account credentials
## POST params: emailin
- url: .*/mailcred.*
  script: src.py.appuser.app


## -------------------- point --------------------

## Add or update a point (org contributor accounts only)
## POST params: email, authtok, date, text, codes, orgid, source, [keywords,
##              refs, srclang, translations, pic]
- url: .*/updpt.*
  script: src.py.point.app


## Retrieve a point
## GET params: email, authtok, pointid
- url: .*/ptdat.*
  script: src.py.point.app


## Retrieve a point pic
## GET params: pointid
- url: .*/ptpic.*
  script: src.py.point.app


## Delete a point pic
## GET params: email, authtok, pointid
- url: .*/nukepic.*
  script: src.py.point.app


## Fetch public points (sys admin only). Public access: docs/pubpts.json
## GET params: email, authtok
- url: .*/dbqpts.*
  script: src.py.point.app


## -------------------- timeline --------------------

## Add or update a timeline.  If instid not provided, then adding new.
## POST params: email, authtok, instid, name, ctype, cids, [slug, lang, comment]
- url: .*/updtl.*
  script: src.py.timeline.app


## Fetch the specified Timeline.
## GET params: tlid or slug, optional uidp
- url: .*/fetchtl.*
  script: src.py.timeline.app


## -------------------- tlcomp --------------------

## Note that a timeline has been completed and update the account data.
## POST params: email, authtok, tlid, tlname
- url: .*/notecomp.*
  script: src.py.tlcomp.app

## Find the most recent completions for the given timeline
## GET params: email, authtok, tlid
- url: .*/findcomps.*
  script: src.py.tlcomp.app


## -------------------- organization --------------------

## Fetch the specified Organization
## GET params: email, authtok, orgid
- url: .*/getorg.*
  script: src.py.org.app

## Fetch Organization members
## GET params: email, authtok, orgid
- url: .*/orgmembers.*
  script: src.py.org.app

## Update an existing org (org administrator only)
## POST params: email, authtok, orgid, name, code, contacturl, projecturl, 
##              regions, categories, tags
- url: .*/updorg.*
  script: src.py.org.app

## Update organization membership (org administrator only)
## POST params: email, authtok, orgid, userid, lev
- url: .*/updmembership.*
  script: src.py.org.app

## Add a new member to the organization (org administrator only)
## POST params: email, authtok, membermail
- url: .*/addmember.*
  script: src.py.org.app

## Verify placeholder org (sys admin only)
## GET params: email, authtok
- url: .*/placeorg.*
  script: src.py.org.app


## -------------------- service --------------------

## Get a CSV of the point Ids currently used for public timeline creation.
## GET params: 
- url: .*/pubptids.*
  script: src.py.service.app


## -------------------- daycount --------------------

## Note interaction progress
## POST params: prog, uidp
- url: .*/noteprog.*
  script: src.py.daycount.app


######################################################################
##  General Config

## Structural static directories
- url: .*/img/
  static_dir: docroot/img/
- url: .*/css/
  static_dir: docroot/css/
- url: .*/docs/
  static_dir: docroot/docs/
- url: .*/js/
  static_dir: docroot/js/

## Nightly periodic processing towards the end of the quota reset cycle.
- url: .*/periodic.*
  script: src.py.service.app
  login: admin

## The index page
- url: /index.html
  static_files: docroot/index.html
  upload: docroot
## The index page with a specific timeline slug/id
- url: .*/timeline/.*
  static_files: docroot/index.html
  upload: docroot
## Trap anything ending with a slash and send it to index.html since
## there is no default processing to figure that out otherwise.
- url: (.*)/
  static_files: docroot/index.html
  upload: docroot
## Catchall is to look in docroot.
- url: /
  static_dir: docroot

